logging:
  # Proxy log records from cluster workers to master process to make sure only
  # one process holds a open handle to logfiles
  proxy: true

  # Settings for specific loggers
  logger:
    access:
      # The access log is created from a specialised factory
      type: 'rapidus-connect-logger'
      # Log events on the access logger does not propagate to the root logger
      propagate: false
      sinks:
        # Each record is written as a plain text to `access.log`
        - type: file
          path: 'access.log'
          format: ':date :time - :remoteAddress - ":method :url" - :status - :requestId'
        # Each record is also written in a colourful way to the console
        - type: console
          format:
            type: 'rapidus-sparkle[createFormatter]'
            format: '%{:levelName [:date :time] :requestId %{bold [:levelName]}} :name - :remoteAddress - ":method :url" - :status'
            colors:
              ERROR: red
              INFO: green
    # These loggers only define their level and rely on the root logger to
    # format and print the messages
    app:
      level: DEBUG
    app.other:
      level: WARN

  # Processors are functions that operate on the log records before being
  # formatted. The default processors are applied by all loggers
  defaultProcessors:
    - type: './example[requestId]'

  # The root logger have one sink, the console
  sinks:
    - type: console
      format:
        type: 'rapidus-sparkle[createFormatter]'
        format: '%{:levelName [:date :time] :requestId %{bold [:levelName]}} :name - :message'
        colors:
          DEBUG: cyan
          WARNING: yellow
          ERROR: red
          INFO: green
